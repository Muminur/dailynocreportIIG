# NOC Email Report Generator - Docker Compose Configuration
# For local development and production deployment

version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: noc-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - AZURE_AD_TENANT_ID=${AZURE_AD_TENANT_ID}
      - AZURE_AD_CLIENT_ID=${AZURE_AD_CLIENT_ID}
      - AZURE_AD_CLIENT_SECRET=${AZURE_AD_CLIENT_SECRET}
      - MONGODB_URI=${MONGODB_URI}
      - GRAPH_API_ENDPOINT=${GRAPH_API_ENDPOINT:-https://graph.microsoft.com/v1.0}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - DEFAULT_TIMEZONE=${DEFAULT_TIMEZONE:-Asia/Dhaka}
      - SESSION_MAX_AGE=${SESSION_MAX_AGE:-86400}
      - MAX_EXPORT_ROWS=${MAX_EXPORT_ROWS:-10000}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - noc-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: noc-mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=noc-reports
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - noc-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    command: ["--auth"]

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: noc-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - app
    networks:
      - noc-network
    profiles:
      - with-nginx

# Networks
networks:
  noc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  nginx_cache:
    driver: local

# Usage:
# docker-compose up -d                # Start app and MongoDB
# docker-compose --profile with-nginx up -d  # Start with Nginx
# docker-compose down                 # Stop all services
# docker-compose down -v              # Stop and remove volumes
# docker-compose logs -f app          # View app logs
# docker-compose ps                   # Check status

